FROM homebrew/brew:latest as homebrew
COPY images/script/setup-pkg-brew.sh setup-pkg-brew.sh
COPY images/config/brew/Brewfile.linux Brewfile.linux
RUN ./setup-pkg-brew.sh Brewfile.linux

FROM ghcr.io/conda/conda-ci:master-linux-python3.10 as conda
USER root
COPY images/config/pip/requirements.txt requirements.txt
RUN /opt/conda/bin/conda create -n py2 python=2 --yes \
  && /opt/conda/envs/py2/bin/pip install --no-cache-dir -r requirements.txt \
  && /opt/conda/bin/conda create -n py3 python=3.11 -c conda-forge --yes \
  && /opt/conda/envs/py3/bin/pip install --no-cache-dir -r requirements.txt \
  && /opt/conda/bin/conda clean --all -y

FROM ubuntu:22.10 as bundles
COPY images/script/setup-bundles.sh setup-bundles.sh
RUN apt-get update -qq \
  && apt-get install -y -qq --no-install-recommends \
    curl ca-certificates unzip tar \
  && ./setup-bundles.sh /opt/bundles

FROM ubuntu:22.10 as vcpkg
RUN apt-get update -qq \
  && apt-get install -y -qq --no-install-recommends \
    ca-certificates git curl zip unzip tar \
  && git clone https://github.com/microsoft/vcpkg /opt/vcpkg \
  && cd /opt/vcpkg \
  && ./bootstrap-vcpkg.sh -disableMetrics

FROM golang:1.19.0-bullseye as golang
COPY images/config/go/requirements.txt requirements.txt
COPY images/script/setup-pkg-go.sh setup-pkg-go.sh
RUN ./setup-pkg-go.sh requirements.txt

FROM ubuntu:22.10 as nixpkgs
COPY images/script/setup-pkg-nix.sh setup-pkg-nix.sh
RUN apt-get update -qq \
  && apt-get install -y -qq --no-install-recommends \
    sudo ca-certificates curl xz-utils \
  && curl -L https://nixos.org/nix/install | sh -s -- --daemon \
  && sudo ./setup-pkg-nix.sh

FROM ubuntu:22.10
LABEL org.opencontainers.image.authors="cccuroky@gmail.com"

ENV PATH=$PATH:/nix/var/nix/profiles/default/bin \
  LANG=en_US.UTF-8 \
  LANGUAGE=en_US.UTF-8 \
  LC_ALL=en_US.UTF-8 \
  HOMEBREW_NO_ANALYTICS=1 \
  HOMEBREW_NO_AUTO_UPDATE=1 \
  HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1 \
  DEBIAN_FRONTEND=noninteractive

RUN apt-get update -qq \
  && apt-get install -y -qq --no-install-recommends \
    sudo ca-certificates gcc g++ man iptables locales file git curl \
    tzdata gnupg2 init systemd openssh-server rsyslog xxd zsh \
    # cron xfce4 xfce4-goodies tightvncserver
  && yes | unminimize \
  && apt-get autoremove -y

RUN curl -sSL https://get.docker.com/ | sh -s

COPY ./ /opt/dotbox/

RUN apt-get install -y python3-pip ansible \
  && pip3 install --no-cache-dir dotdrop 'resolvelib<0.6.0' \
  && ansible-galaxy collection install community.general \
  && ansible-playbook -vvv /opt/dotbox/images/site.yaml \
  && rm -rf /root/.ansible \
  && pip3 uninstall -y dotdrop \
  && apt-get purge -y python3-pip ansible \
  && apt-get autoremove -y

USER cicada

RUN curl -L https://nixos.org/nix/install | sh -s -- --daemon \
  && sudo ln -sfn /nix/var/nix/profiles/default/lib/tmpfiles.d/nix-daemon.conf /etc/tmpfiles.d/nix-daemon.conf \
  && sudo systemd-tmpfiles --create --prefix=/nix/var/nix \
  && sudo systemctl link "/nix/var/nix/profiles/default/lib/systemd/system/nix-daemon.service" \
  && sudo systemctl enable "/nix/var/nix/profiles/default/lib/systemd/system/nix-daemon.socket" \
  && sudo rm -rf /nix

# rustup-init -y --no-modify-path --component rls
RUN curl -sSf https://sh.rustup.rs | sh -s -- -y
  # && rustup toolchain install stable-x86_64-unknown-linux-gnu \
  # && $HOME/.cargo/bin/rustup component add rls

# Note: g=u doesn't really work. https://github.com/moby/buildkit/issues/1951
COPY --chown=1000:1000 --chmod=g=u --from=homebrew /home/linuxbrew /home/linuxbrew
COPY --chown=1000:1000 --chmod=g=u --from=conda /opt/conda /opt/conda
COPY --chown=1000:1000 --chmod=g=u --from=bundles /opt/bundles /opt/bundles
COPY --chown=1000:1000 --chmod=g=u --from=vcpkg /opt/vcpkg /opt/vcpkg
COPY --chown=1000:1000 --chmod=g=u --from=golang /root/go/bin /home/cicada/go/bin
COPY --chown=1000:1000 --chmod=g=u --from=nixpkgs /nix /nix
COPY --chown=1000:1000 --chmod=g=u --from=curoky/sidecar:spark /opt/hadoop /opt/hadoop
COPY --chown=1000:1000 --chmod=g=u --from=curoky/sidecar:spark /opt/spark /opt/spark
COPY --chown=1000:1000 --chmod=g=u --from=curoky/sidecar:flink /opt/flink /opt/flink
COPY --chown=1000:1000 --chmod=g=u --from=curoky/sidecar:hive /opt/hive /opt/hive

USER root
ENTRYPOINT ["/opt/dotbox/images/script/entrypoint.sh"]
