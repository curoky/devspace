name: Build devbox

on:
  push:
    paths:
      - '.github/workflows/build-devbox.yaml'
      - 'devbox/**'
      - 'dotfiles/**'
  workflow_dispatch:
    inputs:
      disable_docker_cache:
        description: 'disable docker cache'
        default: false
        required: false
        type: boolean
  schedule:
    - cron: '0 0 * * 0'

jobs:
  base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - base_image: 'debian:10'
            saved_image: 'debian10'
          - base_image: 'debian:11'
            saved_image: 'debian11'
          - base_image: 'debian:12'
            saved_image: 'debian12'
          - base_image: 'ubuntu:20.04'
            saved_image: 'ubuntu20.04'
          - base_image: 'ubuntu:22.04'
            saved_image: 'ubuntu22.04'
          # - base_image: 'ubuntu:23.04'
          #   saved_image: 'ubuntu23.04'
          - base_image: 'ubuntu:24.04'
            saved_image: 'ubuntu24.04'
          - base_image: 'ubuntu:25.04'
            saved_image: 'ubuntu25.04'
    needs:
      - stage
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: curoky
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: devbox/base/Dockerfile
          push: true
          provenance: mode=max
          cache-from: type=registry,ref=curoky/dotbox:__cache_base_${{ matrix.saved_image }}
          cache-to: type=registry,ref=curoky/dotbox:__cache_base_${{ matrix.saved_image }},mode=max
          no-cache: ${{ github.event_name == 'workflow_dispatch' && inputs.disable_docker_cache == true }}
          build-args: BASE_IMAGE=${{ matrix.base_image }}
          tags: curoky/dotbox:base-${{ matrix.saved_image }}

      - if: github.event_name == 'schedule'
        run: >
          docker run --rm --env=CI=true -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive
          curoky/dotbox:base-${{ matrix.saved_image }}

  stage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name:
          # - cache
          - conda
          - nixpkg
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: curoky
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: docker/stage/${{ matrix.name }}
          file: devbox/stage/${{ matrix.name }}/Dockerfile
          push: true
          provenance: mode=max
          cache-from: type=registry,ref=curoky/dotbox:__cache_stage_${{ matrix.name }}
          cache-to: type=registry,ref=curoky/dotbox:__cache_stage_${{ matrix.name }},mode=max
          no-cache: ${{ github.event_name == 'workflow_dispatch' && inputs.disable_docker_cache == true }}
          tags: curoky/dotbox:stage-${{ matrix.name }}
      - if: github.event_name == 'schedule'
        run: >
          docker run --rm --env=CI=true -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive
          curoky/dotbox:stage-${{ matrix.name }}

  dist:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: gcc
            saved_image: gcc
    needs:
      - base
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: curoky
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: docker/dist/${{ matrix.name }}
          file: devbox/dist/${{ matrix.name }}/Dockerfile
          push: true
          provenance: mode=max
          cache-from: type=registry,ref=curoky/dotbox:__cache_dist_${{ matrix.saved_image }}
          cache-to: type=registry,ref=curoky/dotbox:__cache_dist_${{ matrix.saved_image }},mode=max
          no-cache: ${{ github.event_name == 'workflow_dispatch' && inputs.disable_docker_cache == true }}
          tags: curoky/dotbox:${{ matrix.saved_image }}
      - if: github.event_name == 'schedule'
        run: >
          docker run --rm --env=CI=true -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive
          curoky/dotbox:${{ matrix.saved_image }}

  # dist-tabby:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       include:
  #         - name: tabby
  #           saved_image: tabby
  #   steps:
  #     - uses: actions/checkout@v4
  #     - run: tools/free-github-action-disk-space.sh
  #     - uses: docker/setup-buildx-action@v3
  #     - uses: docker/login-action@v3
  #       with:
  #         username: curoky
  #         password: ${{ secrets.DOCKER_TOKEN }}
  #     - uses: docker/build-push-action@v6
  #       with:
  #         context: docker/dist/${{ matrix.name }}
  #         file: devbox/dist/${{ matrix.name }}/Dockerfile
  #         push: true
  #         provenance: mode=max
  #         cache-from: type=registry,ref=curoky/dotbox:__cache_dist_${{ matrix.saved_image }}
  #         cache-to: type=registry,ref=curoky/dotbox:__cache_dist_${{ matrix.saved_image }},mode=max
  #         no-cache: ${{ github.event_name == 'workflow_dispatch' && inputs.disable_docker_cache == true }}
  #         tags: curoky/dotbox:${{ matrix.saved_image }}

  dist-tf:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # - name: tf2.5-cu11.0.3-cudnn8.1.0-gcc8-py3.7
          - name: tf2.5-cu11.4.0-cudnn8.1.0-gcc8-py3.7
          - name: tf2.5-cu11.4.4-cudnn8.1.0-gcc8-py3.7
          # - name: tf2.5-cu12.4.0-cudnn8.9.2-gcc8-py3.7
          - name: tf2.16-cu12.3.2-cudnn8.9.7-gcc11-py3.11
          - name: tf2.16-cu12.3.2-cudnn8.9.7-clang17-py3.12
          - name: tf2.18-cu12.3.2-cudnn8.9.7-clang17-py3.12
          # - name: tf2.17-cu12.3.2-cudnn8.9.7-gcc10-py3.12
    needs:
      - base
      # - stage-cuda
    steps:
      - uses: actions/checkout@v4
      - run: tools/free-github-action-disk-space.sh
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: curoky
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: docker/dist/tensorflow
          file: devbox/dist/tensorflow/Dockerfile.${{ matrix.name }}
          push: true
          provenance: mode=max
          cache-from: type=registry,ref=curoky/dotbox:__cache_dist_${{ matrix.name }}
          cache-to: type=registry,ref=curoky/dotbox:__cache_dist_${{ matrix.name }},mode=max
          no-cache: ${{ github.event_name == 'workflow_dispatch' && inputs.disable_docker_cache == true }}
          tags: curoky/dotbox:${{ matrix.name }}
      # no space left
      # - run: >
      #     docker run --rm --env=CI=true -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive
      #     curoky/dotbox:${{ matrix.name }}
