name: prepack

on:
  push:
    paths:
      - '.github/workflows/prepack.yaml'
      - 'prepack/**'
      - 'dotfiles/**'
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  packed-tools:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: linux
            arch: x86_64
          - os: darwin
            arch: arm64
    steps:
      - uses: actions/checkout@v4
      - uses: Homebrew/actions/setup-homebrew@master
      - run: brew install makeself

      - run: |
          cd prepack/packed-tools/${{ matrix.os }}
          ./pack.sh

      - uses: svenstaro/upload-release-action@v2
        with:
          file: prepack/packed-tools/${{ matrix.os }}/tmp/tools-installer.${{ matrix.os }}-${{ matrix.arch }}.gzip.sh
          asset_name: tools-installer.${{ matrix.os }}-${{ matrix.arch }}.gzip.sh
          tag: 'v1.0'
          overwrite: true

      - uses: svenstaro/upload-release-action@v2
        with:
          file: prepack/packed-tools/${{ matrix.os }}/tmp/tools-installer.${{ matrix.os }}-${{ matrix.arch }}.zstd.sh
          asset_name: tools-installer.${{ matrix.os }}-${{ matrix.arch }}.zstd.sh
          tag: 'v1.0'
          overwrite: true

      - uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 30

  packed-conda-envs:
    strategy:
      matrix:
        include:
          - os: linux
            arch: x86_64
            runs-on: ubuntu-latest
          - os: darwin
            arch: arm64
            runs-on: macos-latest
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: Homebrew/actions/setup-homebrew@master
      - run: brew install gnu-sed grep gnu-getopt makeself
      - name: add path
        run: |
          echo "/opt/homebrew/opt/grep/libexec/gnubin" >> $GITHUB_PATH
          echo "/opt/homebrew/opt/gnu-sed/libexec/gnubin" >> $GITHUB_PATH
          echo "/opt/homebrew/opt/gnu-getopt/bin" >> $GITHUB_PATH

      - run: |
          cd prepack/packed-conda-envs/${{ matrix.os }}/
          ./pack.sh

      - uses: svenstaro/upload-release-action@v2
        with:
          file: prepack/packed-conda-envs/${{ matrix.os }}/tmp/conda-envs-installer.${{ matrix.os }}-${{ matrix.arch }}.gzip.sh
          asset_name: conda-envs-installer.${{ matrix.os }}-${{ matrix.arch }}.gzip.sh
          tag: 'v1.0'
          overwrite: true

      - uses: svenstaro/upload-release-action@v2
        with:
          file: prepack/packed-conda-envs/${{ matrix.os }}/tmp/conda-envs-installer.${{ matrix.os }}-${{ matrix.arch }}.zstd.sh
          asset_name: conda-envs-installer.${{ matrix.os }}-${{ matrix.arch }}.zstd.sh
          tag: 'v1.0'
          overwrite: true

  packed-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: Homebrew/actions/setup-homebrew@master
      - run: brew install makeself

      - run: |
          cd prepack/packed-docker/debian10
          ./pack.sh

      - uses: svenstaro/upload-release-action@v2
        with:
          file: prepack/packed-docker/debian10/tmp/docker-installer.debian10.gzip.sh
          asset_name: docker-installer.debian10.gzip.sh
          tag: 'v1.0'
          overwrite: true

      - uses: svenstaro/upload-release-action@v2
        with:
          file: prepack/packed-docker/debian10/tmp/docker-installer.debian10.zstd.sh
          asset_name: docker-installer.debian10.zstd.sh
          tag: 'v1.0'
          overwrite: true

      - uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 30

  packed-dotfils:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: Homebrew/actions/setup-homebrew@master
      - run: brew install makeself

      - run: |
          cd prepack/packed-dotfils/
          ./pack.sh

      - uses: svenstaro/upload-release-action@v2
        with:
          file: prepack/packed-dotfils/tmp/dotfils-installer.gzip.sh
          asset_name: dotfils-installer.gzip.sh
          tag: 'v1.0'
          overwrite: true

      - uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 30
