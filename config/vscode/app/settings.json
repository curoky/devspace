{
  "C_Cpp.autocompleteAddParentheses": true,
  "C_Cpp.clang_format_fallbackStyle": "Google",
  "C_Cpp.default.cStandard": "c17",
  "C_Cpp.default.cppStandard": "c++23",
  "C_Cpp.default.intelliSenseMode": "gcc-x64",
  "C_Cpp.intelliSenseCacheSize": 16384,
  "C_Cpp.intelliSenseMemoryLimit": 16384,
  // "C_Cpp.intelliSenseUpdateDelay": 500,
  "[cmake]": {},
  "[rust]": {
    "editor.tabSize": 4
  },
  "[cpp]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  // https://code.visualstudio.com/docs/getstarted/tips-and-tricks#_language-specific-settings
  // https://code.visualstudio.com/docs/getstarted/settings#_languagespecific-editor-settings
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "[dockercompose]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
    // "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[go]": {
    "editor.defaultFormatter": "golang.go",
    "editor.insertSpaces": false,
    "editor.tabSize": 4
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[java]": {
    "editor.defaultFormatter": "xaver.clang-format"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.quickSuggestions": {
      "comments": "on",
      "other": "on",
      "strings": "on"
    },
    "editor.wordWrap": "on"
  },
  "[proto3]": {
    "editor.defaultFormatter": null
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.python",
    "editor.tabSize": 4
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[starlark]": {
    "editor.tabSize": 4
  },
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[xml]": {
    "editor.defaultFormatter": "DotJoshJohnson.xml"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "autoDocstring.includeName": true,
  "bazel.buildifierFixOnFormat": true,
  "bazel.enableCodeLens": true,
  "bazel.queriesShareServer": true,
  "better-comments.tags": [
    {
      "backgroundColor": "transparent",
      "color": "#3366ff",
      "strikethrough": false,
      "tag": "@For: "
    },
    {
      "backgroundColor": "transparent",
      "color": "#875fff",
      "strikethrough": false,
      "tag": "QM:"
    }
  ],
  "bookmarks.saveBookmarksInProject": true,
  "cmake.buildDirectory": "${workspaceRoot}/_build",
  "cmake.buildToolArgs": ["-k 1000"],
  "cmake.configureOnEdit": false,
  "cmake.configureOnOpen": false,
  "debug.console.fontFamily": "UbuntuMonoNerdFontCompleteM-Regular",
  "debug.console.fontSize": 18,
  "debug.inlineValues": true,
  "docker.languageserver.formatter.ignoreMultilineInstructions": true,
  "doxdocgen.generic.authorEmail": "cccuroky@gmail.com",
  // "http.proxy": "http://:3128",
  "doxdocgen.generic.authorName": "curoky",
  "editor.bracketPairColorization.enabled": true,
  // "editor.codeActionsOnSave": {
  //   "source.fixAll.eslint": true
  // },
  "editor.cursorBlinking": "smooth",
  "editor.cursorSmoothCaretAnimation": true,
  "editor.cursorWidth": 4,
  "editor.detectIndentation": false,
  "editor.fontFamily": "FiraCodeNerdFontCompleteM-Retina",
  "editor.fontLigatures": true,
  "editor.fontSize": 25,
  // "editor.fontWeight": "500",
  "editor.inlineSuggest.enabled": true,
  "editor.lineHeight": 31,
  "editor.maxTokenizationLineLength": 2000,
  "editor.minimap.enabled": false,
  "editor.suggest.preview": true,
  "editor.tabSize": 2,
  "errorLens.delay": 15000,
  "eslint.format.enable": true,
  // updated 2022-07-12 03:35
  // https://github.com/antfu/vscode-file-nesting-config
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js",
    "*.xaml": "$(capture).xaml.cs",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.*, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, package.nls*.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, vitest.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock",
    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "rush.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.*, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, package.nls*.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, vitest.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    // mine change
    "BLADE_ROOT": "BLADE_ROOT, BLADE_ROOT.local, build.ninja, compile_commands.json, compile_commands.ori.json, distcc.log",
    "README.md": "LICENSE, LICENSE.md",
    "Cargo.toml": "Cargo.lock",
    "Pipfile": "Pipfile.lock",
    // "WORKSPACE": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, BUILD",
    ".pre-commit-config.yaml": ".clang-format, .cmake-format.py, .isort.cfg, .licenserc.yaml, .shellcheckrc, .style.yapf, license-settings.json, apache-2.tmpl, CPPLINT.cfg, .eslintrc.js, .markdownlintrc, .prettierrc.yaml"
  },
  "explorer.openEditors.visible": 0,
  "extensions.ignoreRecommendations": true,
  "files.associations": {
    "*.BUILD": "starlark",
    "*.blade": "starlark",
    "*.cc.j2": "jinja-cpp",
    "*.h.j2": "jinja-cpp",
    "*.imp": "llvm",
    "*.inc": "cpp",
    "*.mustache": "cpp",
    "*.nova": "thrift",
    "*.orc": "thrift",
    "*.tcc": "cpp",
    "*.tcc.j2": "jinja-cpp",
    // https://code.visualstudio.com/docs/languages/identifiers
    "BUILD": "starlark",
    "Brewfile.*": "ruby",
    "vimrc": "viml"
  },
  "files.autoSave": "afterDelay",
  "files.exclude": {
    "**/*.pyc": true,
    "**/.bundle/**": true,
    "**/.classpath": true,
    "**/.factorypath": true,
    "**/.git/**": true,
    "**/.project": true,
    "**/.pytest_cache": true,
    "**/.settings": true,
    "**/__pycache__/**": true,
    "**/blade-bin/**": true,
    "**/node_modules/**": true,
    ".Building.lock": true,
    ".blade_tools": true
  },
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "files.watcherExclude": {
    "**/build64_release/**": true
  },
  "git-graph.date.format": "ISO Date & Time",
  "git-graph.maxDepthOfRepoSearch": 4,
  "git.autofetch": true,
  "git.confirmSync": false,
  "github.copilot.enable": {
    "*": true,
    "markdown": false,
    "plaintext": true,
    "yaml": false
  },
  "gitlens.advanced.messages": {
    "suppressCommitHasNoPreviousCommitWarning": true,
    "suppressGitVersionWarning": true
  },
  "gitlens.codeLens.enabled": false,
  "gitlens.codeLens.scopes": ["document"],
  "gitlens.defaultDateFormat": "YYYY-MM-D HH:mm:ss",
  "gitlens.defaultDateShortFormat": "YYYY-MM-D HH:mm:ss",
  "gitlens.defaultDateStyle": "absolute",
  "gitlens.defaultTimeFormat": "YYYY-MM-D HH:mm:ss",
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.views.repositories.compact": true,
  "go.autocompleteUnimportedPackages": true,
  "go.toolsManagement.autoUpdate": true,
  "go.useCodeSnippetsOnFunctionSuggest": true,
  "go.useCodeSnippetsOnFunctionSuggestWithoutType": true,
  "hediet.vscode-drawio.codeLinkActivated": false,
  "hediet.vscode-drawio.theme": "automatic",
  "java.configuration.updateBuildConfiguration": "automatic",
  "java.format.settings.profile": "GoogleStyle",
  "java.format.settings.url": "https://raw.githubusercontent.com/google/styleguide/gh-pages/eclipse-java-google-style.xml",
  "java.jdt.ls.vmargs": "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx20G -Xms10G",
  "jupyter.allowUnauthorizedRemoteConnection": true,
  "jupyter.askForKernelRestart": false,
  "jupyter.runStartupCommands": [
    "import sys"
    // "sys.path.insert(0, '')"
  ],
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.donotVerifyTags": true,
  "markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": false,
  "markdown-preview-enhanced.liveUpdate": false,
  "markdown.extension.toc.updateOnSave": false,
  "markdown.preview.fontSize": 21,
  "markdownlint.run": "onSave",
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "notebook.lineNumbers": "on",
  "prettier.jsxSingleQuote": true,
  "prettier.prettierPath": "/usr/local/bin/",
  "python.analysis.completeFunctionParens": true,
  "python.analysis.typeCheckingMode": "basic",
  "python.formatting.provider": "yapf",
  "python.formatting.yapfArgs": [],
  "python.formatting.yapfPath": "/usr/local/bin/yapf",
  "python.languageServer": "Pylance",
  "python.terminal.activateEnvironment": false,
  "pythonTestExplorer.testFramework": "pytest",
  "redhat.telemetry.enabled": false,
  "rest-client.enableTelemetry": false,
  "rest-client.environmentVariables": {
    "$shared": {}
  },
  "rest-client.logLevel": "info",
  "ruby.format": "rubocop",
  "ruby.lint": {
    "rubocop": true
  },
  "ruby.useLanguageServer": true,
  "rust-client.disableRustup": true,
  "rust-client.enableMultiProjectSetup": null,
  "rust.all_features": true,
  "scm.alwaysShowActions": true,
  "scm.alwaysShowRepositories": true,
  "scm.defaultViewMode": "tree",
  "scm.providerCountBadge": "auto",
  // "editor.quickSuggestions": {
  //   "other": "on",
  //   "comments": "off",
  //   "strings": "off"
  // },
  "scm.repositories.sortOrder": "name",
  "search.useGlobalIgnoreFiles": true,
  "security.workspace.trust.enabled": false,
  "shellcheck.exclude": ["1090", "2034", "2068", "2086", "2206", "2231"],
  "shellcheck.run": "onSave",
  "shellformat.flag": "-i 2 -s -ln bash",
  "task.slowProviderWarning": ["typescript"],
  "taskExplorer.pathToMake": "make",
  "telemetry.telemetryLevel": "off",
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.fontFamily": "UbuntuMonoNerdFontCompleteM-Regular",
  "terminal.integrated.fontSize": 23,
  "terminal.integrated.fontWeight": "500",
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.scrollback": 10000,
  "testMate.cpp.discovery.gracePeriodForMissing": 20,
  "testMate.cpp.discovery.runtimeLimit": 20,
  "testMate.cpp.log.logSentry": "enable",
  "testMate.cpp.log.logpanel": true,
  "testMate.cpp.log.userId": "123456",
  "testMate.cpp.test.executables": "{_build,build,Build,BUILD,out,Out,OUT}/**/*{test,Test,TEST}*",
  "testMate.cpp.test.parallelExecutionLimit": 8,
  "thunder-client.saveToWorkspace": true,
  "typescript.surveys.enabled": false,
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "window.nativeTabs": true,
  "window.title": "${rootName}",
  "window.titleBarStyle": "native",
  "workbench.colorCustomizations": {
    // "Gold", "Orchid", "LightSkyBlue", "Salmon", "LawnGreen", "DarkOrange", "Cornsilk"
    "editorBracketHighlight.foreground1": "#ffd700",
    "editorBracketHighlight.foreground2": "#da70d6",
    "editorBracketHighlight.foreground3": "#8da5e8",
    "editorBracketHighlight.foreground4": "#fa9e5d",
    "editorBracketHighlight.foreground5": "#a889fc",
    "editorBracketHighlight.foreground6": "#90a983",
    "minimap.background": "#1f1f2256"
  },
  "workbench.colorTheme": "Better Solarized Light",
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.wrapTabs": true,
  "workbench.editorAssociations": {
    "*.hex": "hexEditor.hexedit",
    "*.ipynb": "jupyter-notebook",
    "*.plist": "default"
  },
  "workbench.fontAliasing": "antialiased",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.startupEditor": "none",
  "workbench.view.alwaysShowHeaderActions": true,
  "yaml.format.enable": false,
  "yaml.format.singleQuote": true,
  "sqltools.useNodeRuntime": true,
  "graphviz-interactive-preview.renderLockAdditionalTimeout": 10000,
  "remote.SSH.connectTimeout": 3600
}
