# Copyright (c) 2018-2023 curoky(cccuroky@gmail.com).
#
# This file is part of dotbox.
# See https://github.com/curoky/dotbox for further info.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

export CONFIG_HOME=~/dotbox/config

for f in "$CONFIG_HOME"/zsh/lib/*.sh; do
  source "$f"
done

#=-> homebrew
eval "$($BREW_PREFIX/bin/brew shellenv)"

#=-> nix
CHECK_AND_SOURCE ~/.nix-profile/etc/profile.d/nix.sh

CHECK_AND_SOURCE ~/mackup/conf/shell/$DEVBOX_PROFILE.sh
CHECK_AND_SOURCE ~/mackup/conf/shell/$MY_HOST_NAME.sh

#=-> start oh-my-zsh
source "${ZSH}/oh-my-zsh.sh"

#=-> conda, GEN by `conda init zsh`, https://stackoverflow.com/questions/40370467/anaconda-not-found-in-zsh
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/conda/bin/conda' 'shell.zsh' 'hook' 2>/dev/null)"
if [ $? -eq 0 ]; then
  eval "$__conda_setup"
else
  if [ -f "/opt/conda/etc/profile.d/conda.sh" ]; then
    . "/opt/conda/etc/profile.d/conda.sh"
  else
    export PATH="/opt/conda/bin:$PATH"
  fi
fi
unset __conda_setup
# <<< conda initialize <<<

# TODO: remove -u
# why: why add -u to compinit?
# ref: https://stackoverflow.com/questions/13762280/zsh-compinit-insecure-directories
# for error:
#   zsh compinit: insecure directories, run compaudit for list.
#   Ignore insecure directories and continue [y] or abort compinit [n]?
# autoload -zU compinit && compinit -u
autoload -U compinit && compinit -u

compdef _bb bb bbup bb4 bb4up bbcl bbclup

# TODO: remove follow
# zstyle ':completion:*' menu select
# unset zle_bracketed_paste

#-> (post) starship
eval "$(starship init zsh)"
