# syntax=docker/dockerfile:1.9.0
FROM debian:10 AS builder
COPY --link --from=curoky/dotbox:stage-cuda-cu11.4.0-cudnn8.1.0 /usr/local/cuda-11.4 /usr/local/cuda-11.4
COPY --link --from=curoky/dotbox:stage-cuda-cu11.4.0-cudnn8.1.0 /app/nvidia/cudnn8.1-cu11 /app/nvidia/cudnn8.1-cu11

COPY ./installer .

RUN ./install-basetool.sh \
  && ./install-bazelisk.sh \
  && apt-get install -y gcc-8 g++-8 python3.7 python3.7-dev python3-pip \
  && python3.7 -m pip install numpy==1.19.5 keras_preprocessing==1.1.2 \
  && ln -sf /usr/bin/python3.7 /usr/bin/python

ENV TF_CUDA_VERSION=11.4 \
  TF_CUDNN_VERSION=8.1.0 \
  TF_CUDA_COMPUTE_CAPABILITIES="sm_75,compute_75,sm_80,compute_80,sm_86,compute_86" \
  # CC=/usr/bin/gcc-10 CXX=/usr/bin/g++-10 \
  GCC_HOST_COMPILER_PATH=/usr/bin/gcc-8 \
  CUDA_TOOLKIT_PATH=/usr/local/cuda-11.4 \
  CUDNN_INSTALL_PATH=/app/nvidia/cudnn8.1-cu11

RUN git clone --recurse-submodules --depth=1 -b v2.5.0 https://github.com/tensorflow/tensorflow
WORKDIR /tensorflow
RUN sed -i -e 's|zlib.net/zlib|zlib.net/fossils/zlib|g' tensorflow/workspace2.bzl
RUN echo 'startup --host_jvm_args=-Djava.net.preferIPv6Addresses=true' >> .bazelrc
RUN bazel build //tensorflow/tools/pip_package:build_pip_package \
    --repo_env=WHEEL_NAME=tensorflow \
    --repo_env=PYTHON_BIN_PATH="/usr/bin/python3.7" \
    --python_path="/usr/bin/python3.7" \
    --config=v2 \
    --config=avx_linux \
    # --config=tensorrt \
    --config=cuda \
    --config=noaws \
    --config=nogcp \
    --config=nohdfs \
    --config=nonccl
RUN ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /output \
  && ls -lah /output/tensorflow-2.5.0-cp37-cp37m-linux-x86_64.whl \
  && rm -rf /root/.cache /tensorflow

FROM debian:latest

COPY --from=builder /output /output
